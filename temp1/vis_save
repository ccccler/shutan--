[{'index': 1, 'question': '随着时间的推移，城镇非私营单位就业人员的年平均工资增长趋势如何？', 'attributes': ['年份', '城镇非私营单位就业人员年平均工资'], 'analysis': '2023年城镇非私营单位就业人员年平均工资增长5.8%，显示稳步上升趋势', 'code': '```\nimport pyecharts.options as opts\nfrom pyecharts.charts import Line\nfrom pyecharts.commons.utils import JsCode\n\n# 数据准备\nyears = ["2023"]\nwages = [120698]\ngrowth_rates = [5.8]\nindustries = ["总体", "农、林、牧、渔业", "采矿业", "制造业", "电力、热力、燃气及水生产和供应业", "建筑业",\n              "批发和零售业", "交通运输、仓储和邮政业", "住宿和餐饮业", \n              "信息传输、软件和信息技术服务业", "金融业", "房地产业", \n              "租赁和商务服务业", "科学研究和技术服务业", "水利、环境和公共设施管理业", \n              "居民服务、修理和其他服务业", "教育", "卫生和社会工作", "文化、体育和娱乐业", "公共管理、社会保障和社会组织"]\nindustry_wages = [120698, 62952, 135025, 103932, 143594, 85804, 124362, 122705, 58094, \n                  231810, 197663, 91932, 109264, 171447, 68656, 68919, \n                  124067, 143818, 127334, 117108]\n\n# 创建图表对象\nline = Line(init_opts=opts.InitOpts(theme=None))\n\n# 添加 X 轴数据\nline.add_xaxis(xaxis_data=industries)\n\n# 添加 Y 轴数据\nline.add_yaxis(\n    series_name="行业平均工资",\n    y_axis=industry_wages,\n    label_opts=opts.LabelOpts(is_show=False),\n    is_smooth=True,\n    markpoint_opts=opts.MarkPointOpts(\n        data=[opts.MarkPointItem(type_="max", name="最大值"),\n              opts.MarkPointItem(type_="min", name="最小值")],\n    ),\n)\n\n# 配置项设置\nline.set_global_opts(\n    title_opts=opts.TitleOpts(title="2023年行业平均工资与增长率"),\n    tooltip_opts=opts.TooltipOpts(trigger="axis"),\n    yaxis_opts=opts.AxisOpts(\n        type_="value",\n        name="行业平均工资",\n        min_=min(industry_wages)*0.9,\n        max_=max(industry_wages)*1.1,\n        interval=20000,\n        axistick_opts=opts.AxisTickOpts(is_show=True),\n        splitline_opts=opts.SplitLineOpts(is_show=True),\n    ),\n    xaxis_opts=opts.AxisOpts(type_="category", name="行业"),\n    legend_opts=opts.LegendOpts(is_show=True),\n    toolbox_opts=opts.ToolboxOpts()\n)\n\n# JsCode 函数来自 pyecharts\n# 添加增长率数据\nline.extend_axis(\n    yaxis=opts.AxisOpts(\n        type_="value",\n        name="行业工资增长率",\n        min_=min(growth_rates)*0.9,\n        max_=max(growth_rates)*1.1,\n        interval=2,\n        axislabel_opts=opts.LabelOpts(formatter="{value} %"),\n        axistick_opts=opts.AxisTickOpts(is_show=True),\n        splitline_opts=opts.SplitLineOpts(is_show=False),\n    )\n)\nline.set_series_opts(\n    markline_opts=opts.MarkLineOpts(\n        label_opts=opts.LabelOpts(position="middle", formatter=JsCode("function (params) { return params.value+\' %\'; }")),\n        data=[opts.MarkLineItem(y=min(growth_rates)*0.9, name="增长率最小值"),\n              opts.MarkLineItem(y=max(growth_rates)*1.1, name="增长率最大值")]\n    )\n)\n\n# 将 Y 轴的增长率数据与折线图关联\nline.add_yaxis(\n    series_name="行业工资增长率",\n    yaxis_index=1,\n    y_axis=growth_rates,\n    label_opts=opts.LabelOpts(is_show=False),\n    is_smooth=True\n)\n\n# 渲染图表到 HTML 文件\nline.render("line_chart_industry_wages.html")\n```'}, {'index': 2, 'question': '不同行业的工资增长率是否存在显著差异？', 'attributes': ['行业分类', '行业工资增长率'], 'analysis': '不同行业的工资增长率存在显著差异，如金融业增长率最高为13.4%，水利、环境和公共设施管理业最低为0.6%。', 'code': '```python\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom pyecharts.commons.utils import JsCode\nfrom pyecharts.globals import ThemeType\n\n# 行业分类\ncategories = [\n    "总体", "农、林、牧、渔业", "采矿业", "制造业",\n    "电力、热力、燃气及水生产和供应业", "建筑业", "批发和零售业",\n    "交通运输、仓储和邮政业", "住宿和餐饮业", "信息传输、软件和信息技术服务业",\n    "金融业", "房地产业", "租赁和商务服务业", "科学研究和技术服务业",\n    "水利、环境和公共设施管理业", "居民服务、修理和其他服务业", "教育",\n    "卫生和社会工作", "文化、体育和娱乐业", "公共管理、社会保障和社会组织"\n]\n\n# 行业工资增长率\ngrowth_rates = [5.8, 6.7, 11.1, 6.6, 8.0, 9.6, 7.8, 6.4, 7.6, 5.2, 13.4, 1.8, 2.6, 4.9, 0.6, 5.3, 3.0, 6.4, 5.1, -0.3]\n\nbar = (\n    Bar(init_opts=opts.InitOpts(theme=ThemeType.NONE))\n    .add_xaxis(categories)\n    .add_yaxis("行业工资增长率", growth_rates, itemstyle_opts=opts.ItemStyleOpts(color=JsCode("""\n        function(params) {\n            var colorList = [\'#5470C6\', \'#91CC75\', \'#EE6666\', \'#73C0DE\', \'#3BA272\', \'#FC8452\', \'#9A60B4\', \'#ea7ccc\'];\n            return colorList[params.dataIndex % colorList.length];\n        }\n    """)))\n    .set_global_opts(\n        title_opts=opts.TitleOpts(title="2023年不同行业的工资增长率"),\n        xaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(rotate=-15)),\n        yaxis_opts=opts.AxisOpts(name="增长率（%）"),\n        toolbox_opts=opts.ToolboxOpts(),\n        legend_opts=opts.LegendOpts(is_show=False)\n    )\n    .set_series_opts(label_opts=opts.LabelOpts(is_show=True))\n    .render("industry_growth_rate_2023.html")\n)\n```'}, {'index': 3, 'question': '各行业的平均工资与城镇非私营单位就业人员的平均工资相比如何？', 'attributes': ['行业分类', '城镇非私营单位就业人员年平均工资', '行业平均工资'], 'analysis': '各行业平均工资中，信息传输、软件和信息技术服务业、金融业、科学研究和技术服务业、卫生和社会工作等行业高于城镇非私营单位平均工资，其余行业低于。', 'code': '```\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom pyecharts.globals import ThemeType\n\n# 数据集\nyear = "2023"\navg_wage_of_non_private_employees = 120698\nindustry_avg_wages = {\n    "农、林、牧、渔业": 62952,\n    "采矿业": 135025,\n    "制造业": 103932,\n    "电力、热力、燃气及水生产和供应业": 143594,\n    "建筑业": 85804,\n    "批发和零售业": 124362,\n    "交通运输、仓储和邮政业": 122705,\n    "住宿和餐饮业": 58094,\n    "信息传输、软件和信息技术服务业": 231810,\n    "金融业": 197663,\n    "房地产业": 91932,\n    "租赁和商务服务业": 109264,\n    "科学研究和技术服务业": 171447,\n    "水利、环境和公共设施管理业": 68656,\n    "居民服务、修理和其他服务业": 68919,\n    "教育": 124067,\n    "卫生和社会工作": 143818,\n    "文化、体育和娱乐业": 127334,\n    "公共管理、社会保障和社会组织": 117108,\n}\n\nindustries = list(industry_avg_wages.keys())\nwages = list(industry_avg_wages.values())\n\n# 生成可视化代码\nbar = (\n    Bar(init_opts=opts.InitOpts(theme=ThemeType.NONE))\n    .add_xaxis(list(industries))\n    .add_yaxis("平均工资", list(wages))\n    .add_yaxis("城镇非私营单位平均工资", [avg_wage_of_non_private_employees]*len(industries))\n    .set_global_opts(\n        title_opts=opts.TitleOpts(title=f"{year}年各行业平均工资对比图"),\n    )\n    .set_series_opts(\n            label_opts=opts.LabelOpts(is_show=False),\n    )\n)\n\n# 渲染\nbar.render("salary_compare.html")\n```\n在这段代码中，我们首先定义了数据集，包括年份、城镇非私营单位的平均工资以及各行业的平均工资。然后我们创建了一个bar对象，设置了一系列的选项（如主题、X轴和Y轴标签等）。最后，我们将图表渲染成一个HTML文件。'}, {'index': 4, 'question': '城镇非私营单位就业人员年平均工资的涨幅比率是否与经济发展水平相关？', 'attributes': ['年份', '涨幅比率'], 'analysis': '数据未包含经济发展水平指标，无法直接判断城镇非私营单位就业人员年平均工资涨幅比率与经济发展水平的关系。', 'code': '```\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Scatter\nfrom pyecharts.globals import ThemeType\n\ndata = [\n    ("农、林、牧、渔业", 62952, 6.7),\n    ("采矿业", 135025, 11.1),\n    ("制造业", 103932, 6.6),\n    ("电力、热力、燃气及水生产和供应业", 143594, 8.0),\n    ("建筑业", 85804, 9.6),\n    ("批发和零售业", 124362, 7.8),\n    ("交通运输、仓储和邮政业", 122705, 6.4),\n    ("住宿和餐饮业", 58094, 7.6),\n    ("信息传输、软件和信息技术服务业", 231810, 5.2),\n    ("金融业", 197663, 13.4),\n    ("房地产业", 91932, 1.8),\n    ("租赁和商务服务业", 109264, 2.6),\n    ("科学研究和技术服务业", 171447, 4.9),\n    ("水利、环境和公共设施管理业", 68656, 0.6),\n    ("居民服务、修理和其他服务业", 68919, 5.3),\n    ("教育", 124067, 3.0),\n    ("卫生和社会工作", 143818, 6.4),\n    ("文化、体育和娱乐业", 127334, 5.1),\n    ("公共管理、社会保障和社会组织", 117108, -0.3),\n]\n\nc = (\n    Scatter(init_opts=opts.InitOpts(theme=ThemeType.LIGHT))\n    .add_xaxis([d[0] for d in data])\n    .add_yaxis("城镇非私营单位就业人员年平均工资", [(d[1], d[2]) for d in data])\n    .set_global_opts(\n        title_opts=opts.TitleOpts(title="城镇非私营单位就业人员年平均工资涨幅比率及行业平均工资"),\n        xaxis_opts=opts.AxisOpts(name="行业"),\n        yaxis_opts=opts.AxisOpts(name="涨幅比率及工资", axislabel_opts=opts.LabelOpts(formatter="{value} 元")),\n        visualmap_opts=opts.VisualMapOpts(type_="size", max_=200000, min_=50000),\n        tooltip_opts=opts.TooltipOpts(formatter="{b}<br/>工资：{c[0]} 元 <br/>涨幅比率：{c[1]} %"),\n    )\n)\n\nc.render("scatter_analysis.html")\n```\n这段代码将生成一个可视化图表，x轴是行业，y轴是涨幅比率及城镇非私营单位就业人员年平均工资。生成的html文件名为"scatter_analysis.html"。图标的数据点大小基于工资值，显示了各行业的年平均工资以及其涨幅比率。'}, {'index': 5, 'question': '哪些行业在过去几年中表现出较高的工资增长率？', 'attributes': ['年份', '行业分类', '行业工资增长率'], 'analysis': '2023年，金融业、采矿业和建筑业的工资增长率分别为13.4%，11.1%和9.6%，表现出较高的工资增长率。', 'code': '```\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\n\n# 数据集（此处简化为Python数据，实际使用时可能需要从文件或数据库中读取）\ndata_list = [\n    (\'总体\', 120698, 5.8),\n    (\'农、林、牧、渔业\', 62952, 6.7),\n    (\'采矿业\', 135025, 11.1),\n    (\'制造业\', 103932, 6.6),\n    (\'电力、热力、燃气及水生产和供应业\', 143594, 8.0),\n    (\'建筑业\', 85804, 9.6),\n    (\'批发和零售业\', 124362, 7.8),\n    (\'交通运输、仓储和邮政业\', 122705, 6.4),\n    (\'住宿和餐饮业\', 58094, 7.6),\n    (\'信息传输、软件和信息技术服务业\', 231810, 5.2),\n    (\'金融业\', 197663, 13.4),\n    (\'房地产业\', 91932, 1.8),\n    (\'租赁和商务服务业\', 109264, 2.6),\n    (\'科学研究和技术服务业\', 171447, 4.9),\n    (\'水利、环境和公共设施管理业\', 68656, 0.6),\n    (\'居民服务、修理和其他服务业\', 68919, 5.3),\n    (\'教育\', 124067, 3.0),\n    (\'卫生和社会工作\', 143818, 6.4),\n    (\'文化、体育和娱乐业\', 127334, 5.1),\n    (\'公共管理、社会保障和社会组织\', 117108, -0.3)\n]\n\nx_data = [item[0] for item in data_list]\ny_data = [item[2] for item in data_list]\n\n# 创建折线图对象\nbar = (\n    Bar()\n    .add_xaxis(x_data)\n    .add_yaxis("年工资增长率", y_data)\n    .set_global_opts(title_opts=opts.TitleOpts(title="各行业工资增长率"),\n                     xaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(rotate=-15)),\n                     yaxis_opts=opts.AxisOpts(name="%"))\n     # 自动在最高值处标记\n    .set_series_opts(\n        label_opts=opts.LabelOpts(is_show=False),\n        markpoint_opts=opts.MarkPointOpts(\n            data=[opts.MarkPointItem(type_="max", name="最大值")]\n        )    \n    )\n)\n\n# 生成图表\nbar.render("bar.html")\n```\n在这段Pyecharts代码中，先定义了数据集，然后创建一个柱状图对象，并设置了x轴、y轴的数据，接着设置了整个图的全局样式及关键点的标记点，并最后生成了图表。注意因为行业名称较长，因此对x轴的标签进行了旋转处理。'}, {'index': 6, 'question': '工资增长率与行业平均工资是否存在相关性？', 'attributes': ['行业工资增长率', '行业平均工资'], 'analysis': '金融业工资增长率最高且平均工资较高表明高收入行业增长迅速需关注收入差距', 'code': '```\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Scatter\nimport pandas as pd\n\n# 数据集准备\ndata = {\n    "行业分类": [\n        "总体", "农、林、牧、渔业", "采矿业", "制造业", "电力、热力、燃气及水生产和供应业",\n        "建筑业", "批发和零售业", "交通运输、仓储和邮政业", "住宿和餐饮业",\n        "信息传输、软件和信息技术服务业", "金融业", "房地产业", "租赁和商务服务业",\n        "科学研究和技术服务业", "水利、环境和公共设施管理业", "居民服务、修理和其他服务业",\n        "教育", "卫生和社会工作", "文化、体育和娱乐业", "公共管理、社会保障和社会组织"\n    ],\n    "行业平均工资": [\n        120698, 62952, 135025, 103932, 143594, 85804, 124362, 122705, 58094,\n        231810, 197663, 91932, 109264, 171447, 68656, 68919, 124067, 143818,\n        127334, 117108\n    ],\n    "行业工资增长率": [\n        5.8, 6.7, 11.1, 6.6, 8.0, 9.6, 7.8, 6.4, 7.6, 5.2, 13.4, 1.8, 2.6, 4.9,\n        0.6, 5.3, 3.0, 6.4, 5.1, -0.3\n    ]\n}\ndf = pd.DataFrame(data)\n\n# 创建散点图\nscatter = (\n    Scatter()\n    .add_xaxis(df[\'行业平均工资\'].tolist())\n    .add_yaxis("行业工资增长率", df[\'行业工资增长率\'].tolist(), label_opts=opts.LabelOpts(formatter="{b}"))\n    .set_global_opts(\n        title_opts=opts.TitleOpts(title="行业平均工资与工资增长率相关性分析"),\n        xaxis_opts=opts.AxisOpts(type_="value", name="行业平均工资"),\n        yaxis_opts=opts.AxisOpts(type_="value", name="行业工资增长率"),\n        visualmap_opts=opts.VisualMapOpts(type_=\'size\', max_=15, min_=5)\n    )\n)\n\nscatter.render("industry_wage_growth_correlation.html")\n```'}]
